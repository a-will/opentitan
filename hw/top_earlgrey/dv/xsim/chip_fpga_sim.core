CAPI=2:
# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0
name: "lowrisc:dv:chip_fpga_sim:0.1"
description: "Earl Grey toplevel for simulation with Vivado"
filesets:
  files_sim_xsim:
    depend:
#      - lowrisc:dv_dpi:uartdpi
#      - lowrisc:dv_dpi:gpiodpi
#      - lowrisc:dv_dpi:jtagdpi
#      - lowrisc:dv_dpi:dmidpi
#      - lowrisc:dv_dpi:spidpi
#      - lowrisc:dv_dpi:usbdpi
      - lowrisc:dv_verilator:memutil_verilator
      - lowrisc:dv_verilator:simutil_verilator
#      - lowrisc:dv:sim_sram
#      - lowrisc:dv:sw_test_status
#      - lowrisc:dv:dv_test_status
      - lowrisc:systems:chip_earlgrey_cw310
    files:
      - $XILINX_VIVADO/data/verilog/src/glbl.v: { file_type: verilogSource }
      - chip_fpga_sim_tb.sv: { file_type: systemVerilogSource }
      - chip_fpga_sim_tb.cc: { file_type: cppSource }

parameters:
  # XXX: This parameter needs to be absolute, or relative to the *.runs/synth_1
  # directory. It's best to pass it as absolute path when invoking fusesoc, e.g.
  # --BootRomInitFile=$PWD/build-bin/sw/device/lib/testing/test_rom/test_rom_fpga_cw310.scr.39.vmem
  # XXX: The VMEM file should be added to the sources of the Vivado project to
  # make the Vivado dependency tracking work. However this requires changes to
  # fusesoc first.
  # TODO: Check if glbl interferes with top-level parameters. Perhaps use rominit and otpinit instead.
  BootRomInitFile:
    datatype: str
    description: Scrambled boot ROM initialization file in 40 bit vmem hex format
    default: "../../../../../build-bin/sw/device/lib/testing/test_rom/test_rom_fpga_cw310.scr.39.vmem"
    paramtype: vlogparam
  OtpCtrlMemInitFile:
    datatype: str
    description: OTP initialization file in vmem hex format
    default: "../../../../../build-bin/sw/device/otp_img/otp_img_fpga_cw310.vmem"
    paramtype: vlogparam
  # For value definition, please see ip/prim/rtl/prim_pkg.sv
  PRIM_DEFAULT_IMPL:
    datatype: str
    paramtype: vlogdefine
    description: Primitives implementation to use, e.g. "prim_pkg::ImplGeneric".
#  RVFI:
#    datatype: bool
#    paramtype: vlogdefine
#    description: Enable the RISC-V Verification Interface and instruction tracing
  AST_BYPASS_CLK:
    datatype: bool
    paramtype: vlogdefine
  IBEX_CUSTOM_PMP_RESET_VALUES:
    datatype: bool
    default: true
    paramtype: vlogdefine
#  VERILATOR_MEM_BASE:
#    datatype: int
#    paramtype: vlogdefine
#    description: Main memory mem base.
#  VERILATOR_TEST_STATUS_ADDR:
#    datatype: int
#    paramtype: vlogdefine
#    description: Verilator specific address to write to, to report the test status. This value should be at a word offset in the unmapped address space.
  flashinit:
    datatype : file
    description : Application to load into Flash (in Verilog hex format)
    paramtype : plusarg
  rominit:
    datatype : file
    description : Application to load into Boot ROM (in Verilog hex format)
    paramtype : plusarg
  otpinit:
    datatype : file
    description : Image to load into the OTP (in Verilog hex format)
    paramtype : plusarg
#  DMIDirectTAP:
#    datatype: bool
#    paramtype: vlogdefine
#    default: true
#    description: Replace JTAG TAP with an OpenOCD direct connection
#  UART_LOG_uart0:
#    datatype: string
#    paramtype: plusarg
#    description: Write a log of output from uart0 to the given log file. Use "-" for stdout.
#  RV_CORE_IBEX_SIM_SRAM:
#    datatype: bool
#    paramtype: vlogdefine
#    description: Disconnect the TL data output of rv_core_ibex so that we can attach the simulation SRAM.
  SYNTHESIS:
    datatype: bool
    paramtype: vlogdefine

targets:
  default: &default_target
    filesets:
      - files_sim_xsim
    toplevel: chip_fpga_sim_tb

  sim:
    parameters:
      - BootRomInitFile
      - OtpCtrlMemInitFile
      - flashinit
      - rominit
      - otpinit
      - PRIM_DEFAULT_IMPL=prim_pkg::ImplXilinx
#      - RVFI=false
      - IBEX_CUSTOM_PMP_RESET_VALUES
      - AST_BYPASS_CLK=true
      - SYNTHESIS=true
    default_tool: xsim
    filesets:
      - files_sim_xsim
    toplevel: chip_fpga_sim_tb glbl
    tools:
      xsim:
        xelab_options:
          - "--debug typical"
          - "-L unisims_ver"
          - "--timescale 1ns/1ps"

  lint:
    <<: *default_target
    default_tool: verilator
    parameters:
      - SYNTHESIS=true
      - AST_BYPASS_CLK=true
    tools:
      verilator:
        mode: lint-only
        verilator_options:
          - "-Wall"
